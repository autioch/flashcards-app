{"version":3,"sources":["actions.js","initialState.js","app/game/badList/index.js","app/game/finished/index.js","app/game/goodList/index.js","app/game/guess/keyboard.js","app/game/guess/input.js","app/game/guess/index.js","app/game/menu/index.js","app/game/status/index.js","app/game/index.js","app/library/index.js","index.js","app/index.js"],"names":["KEYBOARD_ROW_LENGTH","actions","prepare","_ref2","store","state","window","fetch","concat","urlFolderPath","then","resp","text","contents","words","trim","split","map","line","index","_line$trim$split","_line$trim$split2","Object","slicedToArray","income","outcome","_line$trim$split2$","id","origin","isIgnored","setData","restart","_ref3","data","allWords","keyboard","keyboardLetters","flattenDeep","reduce","obj","letter","assign","defineProperty","allLetters","arr","_ref","toLowerCase","filter","extraLetters","uniq","sort","a","b","localeCompare","extraRows","chunk","setupKeyboard","start","_ref4","available","slice","Math","random","good","bad","isFinished","_ref5","pick","_ref6","currentWord","finish","guess","_ref7","duration","round","setGood","setBad","length","_ref8","_ref9","initialState","BadItem","word","react_default","createElement","className","BadList","count","key","Finished","GoodItem","GoodList","KeyboardButton","useLetter","es_button","onClick","KeyboardRow","row","Keyboard","GuessInput","value","update","approve","input","placeholder","onChange","onPressEnter","autoCapitalize","autoComplete","autoCorrect","spellCheck","size","Guess","props","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","Date","bind","assertThisInitialized","updateGuess","nextProps","setState","getTime","ev","target","newGuess","type","Component","GameMenu","NavLink","exact","to","PERCENT","GameStatus","setLightning","lightning","stop","canvas","refs","rect","getBoundingClientRect","canvasLightning","WIDTH","width","HEIGHT","height","COLOR_BG","LINE_JOIN","LINE_WIDTH","LINE_BLUR","MIN_X","MAX_X","left","goodCount","badCount","total","floor","calculateStatus","showLightning","style","ref","Game","status_GameStatus","guess_Guess","Library","Link","icon","el","document","querySelector","createApp","BrowserRouter","basename","Route","path","render"],"mappings":"+QAIMA,EAAsB,GAwBb,IAAAC,EAAA,CAEbC,QAFa,SAAAC,GAEa,IAAhBC,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,MACfC,OACGC,MADH,GAAAC,OACYH,EAAMI,cADlB,iBAEGC,KAAK,SAACC,GAAD,OAAUA,EAAKC,SACpBF,KAAK,SAACG,GACL,IACMC,EADQD,EAASE,OAAOC,MAAM,MAChBC,IAAI,SAACC,EAAMC,GAAU,IAAAC,EACMF,EAAKH,OAAOC,MAAM,KADxBK,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAChCI,EADgCH,EAAA,GACxBI,EADwBJ,EAAA,GAAAK,EAAAL,EAAA,GAGvC,MAAO,CACLM,GAAIR,EACJS,OAAQJ,EACRC,UACAI,kBAPqC,IAAAH,SAWzCtB,EACG0B,QAAQhB,GACRiB,aAITD,QAzBa,SAAAE,GAyBY,IAATlB,EAASkB,EAAfC,KACR,MAAO,CACLC,SAAUpB,EACVqB,SAlDN,SAAuBrB,GACrB,IAAMqB,EAAW,CACf,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9C,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACzC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAG3BC,EAAkBC,sBAAYF,GAAUG,OAAO,SAACC,EAAKC,GAAN,OAAiBlB,OAAOmB,OAAOF,EAAdjB,OAAAoB,EAAA,EAAApB,CAAA,GACnEkB,GAAS,KACR,IAEEG,EAAa7B,EAChBwB,OAAO,SAACM,EAADC,GAAA,IAAQpB,EAARoB,EAAQpB,QAAR,OAAsBmB,EAAIpC,OAAOiB,EAAQqB,cAAc9B,MAAM,MAAM,IAC1E+B,OAAO,SAACP,GAAD,OAAaJ,EAAgBI,KAEjCQ,EAAeC,eAAKN,GAAYO,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,KAAI5C,OAAO,UAC1E8C,EAAYC,gBAAMP,EAAchD,GAGtC,OAFqBmC,EAAS3B,OAAO8C,GAiCvBE,CAAc1C,KAI5B2C,MAhCa,SAAAC,GAiCX,MAAO,CACLC,UAFaD,EAATrD,MAEa6B,SAAS0B,QAAQV,KAAK,kBAAMW,KAAKC,SA5D3C,KA6DPC,KAAM,GACNC,IAAK,GACLC,YAAY,IAIhBlC,QAzCa,SAAAmC,GA0CX,OADiBA,EAAT9D,MACKqD,QAAQU,QAGvBA,KA7Ca,SAAAC,GA6CG,IAAT/D,EAAS+D,EAAT/D,MACL,MAAO,CACLgE,YAAahE,EAAMsD,UAAU,GAC7BA,UAAWtD,EAAMsD,UAAUC,MAAM,KAIrCU,OApDa,WAqDX,MAAO,CACLL,YAAY,IAIhBM,MA1Da,SAAAC,GA0DiB,IAAtBnE,EAAsBmE,EAAtBnE,MAAO4B,EAAeuC,EAAfvC,KAAM7B,EAASoE,EAATpE,MACXmE,EAAoBtC,EAApBsC,MAAOE,EAAaxC,EAAbwC,SACPJ,EAAgBhE,EAAhBgE,YAERA,EAAYI,SAAWZ,KAAKa,MAAMD,EAvFnB,KAwFfJ,EAAYE,MAAQA,EAEhBF,EAAY5C,QAAQqB,gBAAkByB,EAAMzB,cAE9C1C,EAAMuE,UAENvE,EAAMwE,SAGHvE,EAAMsD,UAAUkB,QACnBzE,EAAMkE,SAGRlE,EAAM+D,QAGRQ,QA/Ea,SAAAG,GA+EM,IAATzE,EAASyE,EAATzE,MACR,MAAO,CACL0D,KAAM,CAAC1D,EAAMgE,aAAa7D,OAAOH,EAAM0D,MACvCM,YAAa,OAIjBO,OAtFa,SAAAG,GAsFK,IAAT1E,EAAS0E,EAAT1E,MACP,MAAO,CACL2D,IAAK,CAAC3D,EAAMgE,aAAa7D,OAAOH,EAAM2D,KACtCK,YAAa,QCnHJW,EAAA,CACbrB,UAAW,GACXI,KAAM,GACNC,IAAK,GACLK,YAAa,KACbJ,YAAY,EACZ9B,SAAU,GACV1B,cAAqC,2DCNvC,SAASwE,EAATpC,GAA2B,IAARqC,EAAQrC,EAARqC,KACjB,OACEC,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,iBACbF,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,UAAUH,EAAKtD,QAC/BuD,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,WAAWH,EAAKzD,SAC9ByD,EAAKX,MAAQY,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,SAASH,EAAKX,OAAgBY,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,SAAhB,cAKpD,SAASC,EAATnF,GAA4B,IAATW,EAASX,EAATW,MAC1ByE,EAAQzE,EAAM+D,OAEpB,OACEM,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,YACbF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,gBAAf,QAAoCE,GACpCJ,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,aACZvE,EAAMG,IAAI,SAACiE,GAAD,OAAUC,EAAAhC,EAAAiC,cAACH,EAAD,CAASO,IAAKN,EAAKvD,GAAIuD,KAAMA,QClB3C,SAASO,IACtB,OACEN,EAAAhC,EAAAiC,cAAA,8BCDJ,SAASM,EAAT7C,GAA4B,IAARqC,EAAQrC,EAARqC,KAClB,OACEC,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,kBACbF,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,UAAUH,EAAKtD,QAC/BuD,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,WAAWH,EAAKzD,SAChC0D,EAAAhC,EAAAiC,cAAA,QAAMC,UAAU,YAAYH,EAAKT,SAAjC,MAKS,SAASkB,EAATxF,GAA6B,IAATW,EAASX,EAATW,MAC3ByE,EAAQzE,EAAM+D,OAEpB,OACEM,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,aACbF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,gBAAf,SAAqCE,GACrCJ,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,aACZvE,EAAMG,IAAI,SAACiE,GAAD,OAAUC,EAAAhC,EAAAiC,cAACM,EAAD,CAAUF,IAAKN,EAAKvD,GAAIuD,KAAMA,qECjB3D,SAASU,EAAT/C,GAA+C,IAArBL,EAAqBK,EAArBL,OAAQqD,EAAahD,EAAbgD,UAChC,OAAQV,EAAAhC,EAAAiC,cAACU,EAAA,EAAD,CAAQT,UAAsB,KAAX7C,EAAgB,eAAiB,GAAIuD,QAAS,kBAAMF,EAAUrD,KAAWA,GAGtG,SAASwD,EAAT7F,GAAyC,IAAlB8F,EAAkB9F,EAAlB8F,IAAKJ,EAAa1F,EAAb0F,UAC1B,OACEV,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,iBACZY,EAAIhF,IAAI,SAACuB,EAAQrB,GAAT,OAAmBgE,EAAAhC,EAAAiC,cAACQ,EAAD,CAAgBJ,IAAKrE,EAAOqB,OAAQA,EAAQqD,UAAWA,OAK1E,SAASK,EAATlE,GAA2C,IAAvBG,EAAuBH,EAAvBG,SAAU0D,EAAa7D,EAAb6D,UAC3C,OACEV,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,YACZlD,EAASlB,IAAI,SAACgF,EAAK9E,GAAN,OACZgE,EAAAhC,EAAAiC,cAACY,EAAD,CAAaR,IAAKrE,EAAO0E,UAAWA,EAAWI,IAAKA,oBChB7C,SAASE,EAATtD,GAAgD,IAA1BuD,EAA0BvD,EAA1BuD,MAAOC,EAAmBxD,EAAnBwD,OAAQC,EAAWzD,EAAXyD,QAClD,OACEnB,EAAAhC,EAAAiC,cAACmB,EAAA,EAAD,CACElB,UAAU,oBACVe,MAAOA,EACPI,YAAY,sBACZC,SAAUJ,EACVK,aAAcJ,EACdK,eAAe,MACfC,aAAa,MACbC,YAAY,MACZC,WAAW,QACXC,KAAK,qBCRUC,cACnB,SAAAA,EAAYC,GAAgB,IAAAC,EAAAC,EAAA7F,OAAA8F,EAAA,EAAA9F,CAAA+F,KAAAL,GAAA,QAAAM,EAAAC,UAAA1C,OAAN2C,EAAM,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAANF,EAAME,EAAA,GAAAH,UAAAG,GAAA,OAC1BP,EAAA7F,OAAAqG,EAAA,EAAArG,CAAA+F,MAAAH,EAAA5F,OAAAsG,EAAA,EAAAtG,CAAA0F,IAAAa,KAAAC,MAAAZ,EAAA,CAAAG,KAAMJ,GAANzG,OAAgBgH,MACXnH,MAAQ,CACXkE,MAAO,GACPd,MAAO,IAAIsE,MAEbZ,EAAK5C,MAAQ4C,EAAK5C,MAAMyD,KAAX1G,OAAA2G,EAAA,EAAA3G,QAAA2G,EAAA,EAAA3G,CAAA6F,KACbA,EAAKtB,UAAYsB,EAAKtB,UAAUmC,KAAf1G,OAAA2G,EAAA,EAAA3G,QAAA2G,EAAA,EAAA3G,CAAA6F,KACjBA,EAAKe,YAAcf,EAAKe,YAAYF,KAAjB1G,OAAA2G,EAAA,EAAA3G,QAAA2G,EAAA,EAAA3G,CAAA6F,KAROA,yFAWFgB,GACpBd,KAAKJ,MAAM5C,cAAgB8D,EAAU9D,aACvCgD,KAAKe,SAAS,CACZ7D,MAAO,GACPd,OAAO,IAAIsE,MAAOM,gDAKZC,GACVjB,KAAKe,SAAS,CACZ7D,MAAO+D,EAAGC,OAAOnC,wCAKnB,IAAM3B,GAAW,IAAIsD,MAAOM,UAAYhB,KAAKhH,MAAMoD,MAEnD4D,KAAKJ,MAAM1C,MAAM,CACfA,MAAO8C,KAAKhH,MAAMkE,MAClBE,+CAIMjC,GAAQ,IACR+B,EAAU8C,KAAKhH,MAAfkE,MACFiE,EAAsB,WAAXhG,EAAiB+B,EAAMX,MAAM,GAAI,GAAKW,EAAQ/B,EAE/D6E,KAAKe,SAAS,CACZ7D,MAAOiE,qCAKT,OACErD,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,cACbF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,gBAAgBgC,KAAKJ,MAAM5C,YAAYzC,QACtDuD,EAAAhC,EAAAiC,cAACe,EAAD,CAAOC,MAAOiB,KAAKhH,MAAMkE,MAAO8B,OAAQgB,KAAKa,YAAa5B,QAASe,KAAK9C,QACxEY,EAAAhC,EAAAiC,cAACc,EAAD,CAAU/D,SAAUkF,KAAKJ,MAAM9E,SAAU0D,UAAWwB,KAAKxB,YACzDV,EAAAhC,EAAAiC,cAACU,EAAA,EAAD,CAAQT,UAAU,oBAAoB0B,KAAK,QAAQhB,QAASsB,KAAK9C,MAAOkE,KAAK,WAA7E,iBAnD2BC,6BCFpB,SAASC,EAAT9F,GAAoC,IAAhBzC,EAAgByC,EAAhBzC,MACzBuD,EADyCd,EAATxC,MAChCsD,UACA5B,EAAY3B,EAAZ2B,QAER,OACEoD,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,aACbF,EAAAhC,EAAAiC,cAACU,EAAA,EAAD,CAAQiB,KAAK,QAAQ0B,KAAK,UAAU1C,QAAShE,GAA7C,WACAoD,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,wBAAwB1B,EAAUkB,OAAjD,SACAM,EAAAhC,EAAAiC,cAACwD,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,YAChB3D,EAAAhC,EAAAiC,cAACU,EAAA,EAAD,CAAQiB,KAAK,QAAQ0B,KAAK,WAA1B,kCCTFM,UAAU,SAmBKC,8LAEjB3B,KAAK4B,8DAIL5B,KAAK6B,UAAUC,8CAGF,IACLC,EAAW/B,KAAKgC,KAAhBD,OACFE,EAAOF,EAAOG,wBAEpBlC,KAAK6B,UAAYM,IAAgBJ,EAAQ,CACvCK,MAAOH,EAAKI,MACZC,OAAQL,EAAKM,OACbC,SAAU,cAIVC,UAAW,QACXC,WAAY,EACZC,UAAW,EACXC,MAAO,EACPC,MAAO,IAET7C,KAAK6B,UAAUzF,yCAGf,IAAM0G,EA9CV,SAAyBpG,EAAMC,GAC7B,IAAMoG,EAAYrG,EAAKc,OACjBwF,EAAWrG,EAAIa,OAErB,IAAKwF,EACH,OAAO,EAGT,IAAKD,EACH,OAAOrB,EAGT,IAAMuB,EAAQF,EAAYC,EAE1B,OAAOxG,KAAK0G,MAAOF,EAAWC,EAASvB,GAgCxByB,CAAgBnD,KAAKJ,MAAMlD,KAAMsD,KAAKJ,MAAMjD,KACnDyG,EAAgBN,EAAO,GAAKA,EAAO,IAEzC,OACEhF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,cAAcqF,MAAO,CAClCP,KAAI,GAAA3J,OAAK2J,EAAL,OAEHhF,EAAAhC,EAAAiC,cAAA,UAAQuF,IAAI,SAAStF,UAAS,sBAAA7E,OAAwBiK,EAAgB,GAAK,2BApC5C/B,oBCfzB,SAASkC,EAAT/H,GAAgC,IAAhBxC,EAAgBwC,EAAhBxC,MAAOD,EAASyC,EAATzC,MAC5B2D,EAAiD1D,EAAjD0D,KAAMC,EAA2C3D,EAA3C2D,IAAK7B,EAAsC9B,EAAtC8B,SAAU8B,EAA4B5D,EAA5B4D,WAAYI,EAAgBhE,EAAhBgE,YACjCE,EAAUnE,EAAVmE,MAER,OACEY,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,QACbF,EAAAhC,EAAAiC,cAACyF,EAAD,CAAQ9G,KAAMA,EAAMC,IAAKA,KACvBC,GAAckB,EAAAhC,EAAAiC,cAAC0F,EAAD,CAAO3I,SAAUA,EAAUkC,YAAaA,EAAaE,MAAOA,IAC3EN,GAAckB,EAAAhC,EAAAiC,cAACK,EAAD,MACfN,EAAAhC,EAAAiC,cAACO,EAAD,CAAU7E,MAAOiD,IACjBoB,EAAAhC,EAAAiC,cAACE,EAAD,CAASxE,MAAOkD,IAChBmB,EAAAhC,EAAAiC,cAACuD,EAAD,CAAMvI,MAAOA,EAAOC,MAAOA,iCCflB,SAAS0K,EAATlI,GAA4B,IACjCX,EADiCW,EAATxC,MACxB6B,SAER,OACEiD,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,YACbF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,mBACbF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,kBAAf,iBAA+CnD,EAAS2C,OAAxD,KACAM,EAAAhC,EAAAiC,cAAC4F,EAAA,EAAD,CAAM3F,UAAU,iBAAiByD,GAAG,KAClC3D,EAAAhC,EAAAiC,cAAC6F,EAAA,EAAD,CAAMxC,KAAK,mBAGftD,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,iBACZnD,EAASjB,IAAI,SAACiE,EAAM/D,GAAP,OACZgE,EAAAhC,EAAAiC,cAAA,OAAKI,IAAKrE,EAAOkE,UAAU,gBACzBF,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,iBAAiBH,EAAKtD,QACrCuD,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,iBAAiBH,EAAKzD,qBCdjD,IAAMyJ,EAAKC,SAASC,cAAc,SAEpBC,oBAAUpL,EAAS+E,ECFlB,SAAAnC,GAA+B,IAAhBxC,EAAgBwC,EAAhBxC,MAAOD,EAASyC,EAATzC,MACnC,OACE+E,EAAAhC,EAAAiC,cAACkG,EAAA,EAAD,CAAQC,SAAUlL,EAAMI,eACtB0E,EAAAhC,EAAAiC,cAAA,OAAKC,UAAU,iBACbF,EAAAhC,EAAAiC,cAACoG,EAAA,EAAD,CAAO3C,OAAK,EAAC4C,KAAK,IAAIC,OAAQ,kBAAMvG,EAAAhC,EAAAiC,cAACwF,EAAD,CAAMvK,MAAOA,EAAOD,MAAOA,OAC/D+E,EAAAhC,EAAAiC,cAACoG,EAAA,EAAD,CAAO3C,OAAK,EAAC4C,KAAK,WAAWC,OAAQ,kBAAMvG,EAAAhC,EAAAiC,cAAC2F,EAAD,CAAS1K,MAAOA,EAAOD,MAAOA,UDHpB8K,GAEvDhL","file":"static/js/main.e4e68c9d.chunk.js","sourcesContent":["import { flattenDeep, uniq, chunk } from 'lodash';\r\n\r\nconst HALF = 0.5;\r\nconst MILISECOND = 1000;\r\nconst KEYBOARD_ROW_LENGTH = 10;\r\n\r\nfunction setupKeyboard(words) {\r\n  const keyboard = [\r\n    ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\r\n    ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'],\r\n    ['z', 'x', 'c', 'v', 'b', 'n', 'm']\r\n  ];\r\n\r\n  const keyboardLetters = flattenDeep(keyboard).reduce((obj, letter) => Object.assign(obj, {\r\n    [letter]: true\r\n  }), {});\r\n\r\n  const allLetters = words\r\n    .reduce((arr, { outcome }) => arr.concat(outcome.toLowerCase().split('')), [])\r\n    .filter((letter) => !keyboardLetters[letter]);\r\n\r\n  const extraLetters = uniq(allLetters).sort((a, b) => a.localeCompare(b)).concat('←');\r\n  const extraRows = chunk(extraLetters, KEYBOARD_ROW_LENGTH);\r\n  const fullKeyboard = keyboard.concat(extraRows);\r\n\r\n  return fullKeyboard;\r\n}\r\n\r\nexport default {\r\n\r\n  prepare({ store, state }) {\r\n    window\r\n      .fetch(`${state.urlFolderPath}/library.csv`)\r\n      .then((resp) => resp.text())\r\n      .then((contents) => {\r\n        const lines = contents.trim().split('\\n');\r\n        const words = lines.map((line, index) => {\r\n          const [income, outcome, isIgnored = false] = line.trim().split(';');\r\n\r\n          return {\r\n            id: index,\r\n            origin: income,\r\n            outcome,\r\n            isIgnored: !!isIgnored\r\n          };\r\n        });\r\n\r\n        store\r\n          .setData(words)\r\n          .restart();\r\n      });\r\n  },\r\n\r\n  setData({ data: words }) {\r\n    return {\r\n      allWords: words,\r\n      keyboard: setupKeyboard(words)\r\n    };\r\n  },\r\n\r\n  start({ state }) {\r\n    return {\r\n      available: state.allWords.slice().sort(() => Math.random() - HALF),\r\n      good: [],\r\n      bad: [],\r\n      isFinished: false\r\n    };\r\n  },\r\n\r\n  restart({ store }) {\r\n    return store.start().pick();\r\n  },\r\n\r\n  pick({ state }) {\r\n    return {\r\n      currentWord: state.available[0],\r\n      available: state.available.slice(1)\r\n    };\r\n  },\r\n\r\n  finish() {\r\n    return {\r\n      isFinished: true\r\n    };\r\n  },\r\n\r\n  guess({ state, data, store }) {\r\n    const { guess, duration } = data;\r\n    const { currentWord } = state;\r\n\r\n    currentWord.duration = Math.round(duration / MILISECOND);\r\n    currentWord.guess = guess;\r\n\r\n    if (currentWord.outcome.toLowerCase() === guess.toLowerCase()) {\r\n    // if (Math.random() > HALF) {\r\n      store.setGood();\r\n    } else {\r\n      store.setBad();\r\n    }\r\n\r\n    if (!state.available.length) {\r\n      store.finish();\r\n    }\r\n\r\n    store.pick();\r\n  },\r\n\r\n  setGood({ state }) {\r\n    return {\r\n      good: [state.currentWord].concat(state.good),\r\n      currentWord: null\r\n    };\r\n  },\r\n\r\n  setBad({ state }) {\r\n    return {\r\n      bad: [state.currentWord].concat(state.bad),\r\n      currentWord: null\r\n    };\r\n  }\r\n};\r\n","const IS_DEVELOPMENT = false;\r\n\r\nexport default {\r\n  available: [],\r\n  good: [],\r\n  bad: [],\r\n  currentWord: null,\r\n  isFinished: true,\r\n  keyboard: [],\r\n  urlFolderPath: IS_DEVELOPMENT ? '' : '/flashcards-app'\r\n};\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\nfunction BadItem({ word }) {\r\n  return (\r\n    <div className=\"bad-list-item\">\r\n      <span className=\"origin\">{word.origin}</span>\r\n      <span className=\"outcome\">{word.outcome}</span>\r\n      { word.guess ? <span className=\"wrong\">{word.guess}</span> : <span className=\"empty\">no answer</span> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function BadList({ words }) {\r\n  const count = words.length;\r\n\r\n  return (\r\n    <div className=\"bad-list\">\r\n      <div className=\"game__header\">Bad: {count}</div>\r\n      <div className=\"word-list\">\r\n        {words.map((word) => <BadItem key={word.id} word={word} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Finished() {\r\n  return (\r\n    <div>Finished!</div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\nfunction GoodItem({ word }) {\r\n  return (\r\n    <div className=\"good-list-item\">\r\n      <span className=\"origin\">{word.origin}</span>\r\n      <span className=\"outcome\">{word.outcome}</span>\r\n      <span className=\"duration\">{word.duration}s</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function GoodList({ words }) {\r\n  const count = words.length;\r\n\r\n  return (\r\n    <div className=\"good-list\">\r\n      <div className=\"game__header\">Good: {count}</div>\r\n      <div className=\"word-list\">\r\n        {words.map((word) => <GoodItem key={word.id} word={word} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\n\r\nfunction KeyboardButton({ letter, useLetter }) {\r\n  return (<Button className={letter === '' ? 'is-invisible' : ''} onClick={() => useLetter(letter)} >{letter}</Button>);\r\n}\r\n\r\nfunction KeyboardRow({ row, useLetter }) {\r\n  return (\r\n    <div className=\"keyboard__row\">\r\n      {row.map((letter, index) => <KeyboardButton key={index} letter={letter} useLetter={useLetter} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Keyboard({ keyboard, useLetter }) {\r\n  return (\r\n    <div className=\"keyboard\">\r\n      {keyboard.map((row, index) =>\r\n        <KeyboardRow key={index} useLetter={useLetter} row={row} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Input } from 'antd';\r\n\r\nexport default function GuessInput({ value, update, approve }) {\r\n  return (\r\n    <Input\r\n      className=\"game-guess__input\"\r\n      value={value}\r\n      placeholder=\"Place Your guess...\"\r\n      onChange={update}\r\n      onPressEnter={approve}\r\n      autoCapitalize=\"off\"\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      spellCheck=\"false\"\r\n      size=\"large\"\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\nimport Keyboard from './keyboard';\r\nimport Input from './input';\r\n\r\nimport './styles.scss';\r\n\r\nexport default class Guess extends Component {\r\n  constructor(props, ...args) {\r\n    super(props, ...args);\r\n    this.state = {\r\n      guess: '',\r\n      start: new Date()\r\n    };\r\n    this.guess = this.guess.bind(this);\r\n    this.useLetter = this.useLetter.bind(this);\r\n    this.updateGuess = this.updateGuess.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.currentWord !== nextProps.currentWord) {\r\n      this.setState({\r\n        guess: '',\r\n        start: new Date().getTime()\r\n      });\r\n    }\r\n  }\r\n\r\n  updateGuess(ev) {\r\n    this.setState({\r\n      guess: ev.target.value\r\n    });\r\n  }\r\n\r\n  guess() {\r\n    const duration = new Date().getTime() - this.state.start;\r\n\r\n    this.props.guess({\r\n      guess: this.state.guess,\r\n      duration\r\n    });\r\n  }\r\n\r\n  useLetter(letter) {\r\n    const { guess } = this.state;\r\n    const newGuess = letter === '←' ? guess.slice(0, -1) : guess + letter;\r\n\r\n    this.setState({\r\n      guess: newGuess\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game-guess\">\r\n        <div className=\"current-word\">{this.props.currentWord.origin}</div>\r\n        <Input value={this.state.guess} update={this.updateGuess} approve={this.guess} />\r\n        <Keyboard keyboard={this.props.keyboard} useLetter={this.useLetter} />\r\n        <Button className=\"game-guess__check\" size=\"large\" onClick={this.guess} type=\"primary\">Check</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\nimport './styles.scss';\r\n\r\nexport default function GameMenu({ store, state }) {\r\n  const { available } = state;\r\n  const { restart } = store;\r\n\r\n  return (\r\n    <div className=\"game-menu\">\r\n      <Button size=\"large\" type=\"primary\" onClick={restart}>Restart</Button>\r\n      <div className=\"game-menu__remaining\">{available.length} left</div>\r\n      <NavLink exact to=\"/library\">\r\n        <Button size=\"large\" type=\"primary\">Library</Button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport canvasLightning from 'canvas-lightning';\r\n\r\nimport './styles.scss';\r\n\r\nconst PERCENT = 100;\r\n\r\nfunction calculateStatus(good, bad) {\r\n  const goodCount = good.length;\r\n  const badCount = bad.length;\r\n\r\n  if (!badCount) {\r\n    return 0;\r\n  }\r\n\r\n  if (!goodCount) {\r\n    return PERCENT;\r\n  }\r\n\r\n  const total = goodCount + badCount;\r\n\r\n  return Math.floor((badCount / total) * PERCENT);\r\n}\r\n\r\nexport default class GameStatus extends Component {\r\n  componentDidMount() {\r\n    this.setLightning();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.lightning.stop();\r\n  }\r\n\r\n  setLightning() {\r\n    const { canvas } = this.refs;\r\n    const rect = canvas.getBoundingClientRect();\r\n\r\n    this.lightning = canvasLightning(canvas, {\r\n      WIDTH: rect.width,\r\n      HEIGHT: rect.height,\r\n      COLOR_BG: 'transparent',\r\n\r\n      // COLOR_LIGHT: '#fff',\r\n      // COLOR_BLUR: '#fff',\r\n      LINE_JOIN: 'round',\r\n      LINE_WIDTH: 5,\r\n      LINE_BLUR: 2,\r\n      MIN_X: 1,\r\n      MAX_X: 3\r\n    });\r\n    this.lightning.start();\r\n  }\r\n  render() {\r\n    const left = calculateStatus(this.props.good, this.props.bad);\r\n    const showLightning = left > 0 && left < 100;\r\n\r\n    return (\r\n      <div className=\"game-status\" style={{\r\n        left: `${left}%`\r\n      }}>\r\n        {<canvas ref=\"canvas\" className={`game-status__canvas${showLightning ? '' : ' is-invisible'}`}></canvas>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport BadList from './badList';\r\nimport Finished from './finished';\r\nimport GoodList from './goodList';\r\nimport Guess from './guess';\r\nimport Menu from './menu';\r\nimport Status from './status';\r\nimport './styles.scss';\r\n\r\nexport default function Game({ state, store }) {\r\n  const { good, bad, keyboard, isFinished, currentWord } = state;\r\n  const { guess } = store;\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <Status good={good} bad={bad}/>\r\n      {!isFinished && <Guess keyboard={keyboard} currentWord={currentWord} guess={guess} />}\r\n      {isFinished && <Finished />}\r\n      <GoodList words={good} />\r\n      <BadList words={bad} />\r\n      <Menu store={store} state={state} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from 'antd';\r\nimport './styles.scss';\r\n\r\nexport default function Library({ state }) {\r\n  const { allWords } = state;\r\n\r\n  return (\r\n    <div className=\"app-page\">\r\n      <div className=\"library__header\">\r\n        <div className=\"library__label\">Words library({allWords.length})</div>\r\n        <Link className=\"library__close\" to=\"/\">\r\n          <Icon type=\"close-circle\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"library__list\">\r\n        {allWords.map((word, index) =>\r\n          <div key={index} className=\"library__row\">\r\n            <div className=\"library__cell\">{word.origin}</div>\r\n            <div className=\"library__cell\">{word.outcome}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import 'antd/dist/antd.css';\r\nimport { createApp } from 'pipe-and-gauge';\r\nimport actions from './actions';\r\nimport initialState from './initialState';\r\nimport ReactAppView from './app';\r\n\r\nconst el = document.querySelector('#root');\r\n\r\nconst store = createApp(actions, initialState, ReactAppView, el);\r\n\r\nstore.prepare();\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Game from './game';\r\nimport Library from './library';\r\nimport './styles.scss';\r\n\r\nexport default function App({ state, store }) {\r\n  return (\r\n    <Router basename={state.urlFolderPath}>\r\n      <div className=\"app-container\">\r\n        <Route exact path=\"/\" render={() => <Game state={state} store={store} /> } />\r\n        <Route exact path=\"/library\" render={() => <Library state={state} store={store} /> } />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}