{"version":3,"sources":["data/index.js","data/nouns.js","data/verbs.js","data/adjectives.js","data/numerals.js","data/particles.js","data/prepositions.js","data/adverbs.js","data/pronouns.js","data/recent.js","data/getData.js","actions.js","app/game/badList/index.js","app/game/goodList/index.js","app/game/guess/keyboard.js","app/game/guess/input.js","app/game/guess/index.js","app/game/menu/index.js","app/game/index.js","app/library/index.js","index.js","initialState.js","app/index.js"],"names":["data","nouns","header","polish","german","items","verbs","adjectives","numerals","label","particles","prepositions","adverbs","pronouns","recent","getWords","Object","entries","reduce","arr","entry","concat","_ref","_ref2","slicedToArray","key","filter","_ref3","length","map","_ref4","origin","Array","isArray","outcome","duration","parseGroupWords","sort","a","b","localeCompare","word","index","objectSpread","id","getData","words","letters","_ref5","split","uniq","getLetters","actions","setData","_getData","allWords","start","available","state","slice","Math","random","good","bad","isFinished","restart","store","pick","currentWord","finish","guess","round","setGood","setBad","_ref6","BadItem","react_default","createElement","className","BadList","count","GoodItem","GoodList","Letter","letter","useLetter","es_button","onClick","GameGuessKeyboard","GuessInput","value","update","approve","input","placeholder","onChange","onPressEnter","autoCapitalize","autoComplete","autoCorrect","spellCheck","size","Guess","props","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","Date","bind","assertThisInitialized","updateGuess","nextProps","setState","getTime","ev","target","type","Component","GameMenu","NavLink","exact","to","PERCENT","Game","style","goodCount","badCount","left","total","floor","calculateStatus","guess_Guess","Library","Link","icon","el","document","querySelector","createApp","BrowserRouter","Route","path","render"],"mappings":"iPAYeA,EAAA,CACbC,MCba,CACbC,OAAQ,CACNC,OAAQ,gBACRC,OAAQ,iBAEVC,MAAO,CAAC,CACNF,OAAQ,sBACRC,OAAQ,CAAC,WAAY,kBACpB,CACDD,OAAQ,UACRC,OAAQ,CAAC,WAAY,eACpB,CACDD,OAAQ,UACRC,OAAQ,CAAC,WAAY,iBDCvBE,MEda,CACbJ,OAAQ,CACNC,OAAQ,eACRC,OAAQ,YAEVC,MAAO,CAAC,CACNF,OAAQ,WACRC,OAAQ,QACP,CACDD,OAAQ,YACRC,OAAQ,SACP,CACDD,OAAQ,sBACRC,OAAQ,UACP,CACDD,OAAQ,aACRC,OAAQ,UACP,CACDD,OAAQ,aACRC,OAAQ,SACP,CACDD,OAAQ,YACRC,OAAQ,UACP,CACDD,OAAQ,eACRC,OAAQ,YFVVG,WGfa,CACbL,OAAQ,CACNC,OAAQ,iBACRC,OAAQ,eAEVC,MAAO,IHWPG,SIhBa,CACbN,OAAQ,CACNC,OAAQ,gBACRC,OAAQ,iBAEVC,MAAO,CAAC,CACNI,MAAO,IACPN,OAAQ,OACRC,OAAQ,QACP,CACDK,MAAO,IACPN,OAAQ,QACRC,OAAQ,OACP,CACDK,MAAO,IACPN,OAAQ,MACRC,OAAQ,QACP,CACDK,MAAO,IACPN,OAAQ,OACRC,OAAQ,QACP,CACDK,MAAO,IACPN,OAAQ,SACRC,OAAQ,QACP,CACDK,MAAO,IACPN,OAAQ,iBACRC,OAAQ,WACP,CACDK,MAAO,IACPN,OAAQ,kBACRC,OAAQ,SACP,CACDK,MAAO,IACPN,OAAQ,SACRC,OAAQ,UACP,CACDK,MAAO,IACPN,OAAQ,QACRC,OAAQ,QACP,CACDK,MAAO,IACPN,OAAQ,qBACRC,OAAQ,QACP,CACDK,MAAO,KACPN,OAAQ,qBACRC,OAAQ,QACP,CACDK,MAAO,KACPN,OAAQ,kBACRC,OAAQ,OACP,CACDK,MAAO,KACPN,OAAQ,iBACRC,OAAQ,YACP,CACDK,MAAO,KACPN,OAAQ,kBACRC,OAAQ,YACP,CACDK,MAAO,KACPN,OAAQ,mBACRC,OAAQ,YACP,CACDK,MAAO,KACPN,OAAQ,uBACRC,OAAQ,eACP,CACDK,MAAO,KACPN,OAAQ,kBACRC,OAAQ,YACP,CACDK,MAAO,KACPN,OAAQ,oBACRC,OAAQ,YACP,CACDK,MAAO,KACPN,OAAQ,mBACRC,OAAQ,YACP,CACDK,MAAO,KACPN,OAAQ,2BACRC,OAAQ,YACP,CACDK,MAAO,KACPN,OAAQ,mBACRC,OAAQ,WACP,CACDK,MAAO,KACPN,OAAQ,yBACRC,OAAQ,iBACP,CACDK,MAAO,KACPN,OAAQ,uBACRC,OAAQ,kBACP,CACDK,MAAO,KACPN,OAAQ,mBACRC,OAAQ,cACP,CACDK,MAAO,KACPN,OAAQ,oBACRC,OAAQ,WACP,CACDK,MAAO,KACPN,OAAQ,8BACRC,OAAQ,cACP,CACDK,MAAO,KACPN,OAAQ,+BACRC,OAAQ,WACP,CACDK,MAAO,KACPN,OAAQ,sBACRC,OAAQ,WACP,CACDK,MAAO,KACPN,OAAQ,qBACRC,OAAQ,WACP,CACDK,MAAO,KACPN,OAAQ,kCACRC,OAAQ,WACP,CACDK,MAAO,MACPN,OAAQ,MACRC,OAAQ,WACP,CACDK,MAAO,MACPN,OAAQ,YACRC,OAAQ,qBACP,CACDK,MAAO,MACPN,OAAQ,sBACRC,OAAQ,oBACP,CACDK,MAAO,QACPN,OAAQ,cACRC,OAAQ,WACP,CACDK,MAAO,QACPN,OAAQ,oBACRC,OAAQ,mBACP,CACDK,MAAO,QACPN,OAAQ,8BACRC,OAAQ,kBACP,CACDK,MAAO,QACPN,OAAQ,kCACRC,OAAQ,KACP,CACDK,MAAO,SACPN,OAAQ,kCACRC,OAAQ,eACP,CACDK,MAAO,UACPN,OAAQ,mBACRC,OAAQ,qBACP,CACDK,MAAO,YACPN,OAAQ,SACRC,OAAQ,aJnJVM,UKjBa,CACbR,OAAQ,CACNC,OAAQ,mBACRC,OAAQ,YAEVC,MAAO,CAAC,CACNF,OAAQ,YACRC,OAAQ,SACP,CACDD,OAAQ,YACRC,OAAQ,QACP,CACDD,OAAQ,SACRC,OAAQ,QACP,CACDD,OAAQ,8BACRC,OAAQ,QACP,CACDD,OAAQ,QACRC,OAAQ,SACP,CACDD,OAAQ,aACRC,OAAQ,gBACP,CACDD,OAAQ,UACRC,OAAQ,QACP,CACDD,OAAQ,MACRC,OAAQ,MACP,CACDD,OAAQ,QACRC,OAAQ,SACP,CACDD,OAAQ,OACRC,OAAQ,QLhBVO,aMlBa,CACbT,OAAQ,CACNC,OAAQ,gBACRC,OAAQ,sBAEVC,MAAO,CAAC,CACNF,OAAQ,oBACRC,OAAQ,OACP,CACDD,OAAQ,qBACRC,OAAQ,OACP,CACDD,OAAQ,cACRC,OAAQ,gBACP,CACDD,OAAQ,4BACRC,OAAQ,OACP,CACDD,OAAQ,sBACRC,OAAQ,QACP,CACDD,OAAQ,YACRC,OAAQ,QACP,CACDD,OAAQ,WACRC,OAAQ,OACP,CACDD,OAAQ,sBACRC,OAAQ,QNTVQ,QOnBa,CACbV,OAAQ,CACNC,OAAQ,0BACRC,OAAQ,eAEVC,MAAO,CAAC,CACNF,OAAQ,SACRC,OAAQ,WACP,CACDD,OAAQ,cACRC,OAAQ,YACP,CACDD,OAAQ,YACRC,OAAQ,WACP,CACDD,OAAQ,aACRC,OAAQ,SACP,CACDD,OAAQ,SACRC,OAAQ,OACP,CACDD,OAAQ,MACRC,OAAQ,gBACP,CACDD,OAAQ,QACRC,OAAQ,qBACP,CACDD,OAAQ,gBACRC,OAAQ,cACP,CACDD,OAAQ,UACRC,OAAQ,YACP,CACDD,OAAQ,aACRC,OAAQ,QACP,CACDD,OAAQ,WACRC,OAAQ,gBPjBVS,SQpBa,CACbX,OAAQ,CACNC,OAAQ,cACRC,OAAQ,YAEVC,MAAO,CAAC,CACNF,OAAQ,KACRC,OAAQ,CAAC,MAAO,SAAU,MAAO,SAChC,CACDD,OAAQ,KACRC,OAAQ,CAAC,KAAM,SAAU,MAAO,SAC/B,CACDD,OAAQ,KACRC,OAAQ,CAAC,KAAM,SAAU,MAAO,QAC/B,CACDD,OAAQ,MACRC,OAAQ,CAAC,MAAO,QAAS,MAAO,QAC/B,CACDD,OAAQ,MACRC,OAAQ,CAAC,KAAM,SAAU,MAAO,OAC/B,CACDD,OAAQ,KACRC,OAAQ,CAAC,MAAO,QAAS,MAAO,QAC/B,CACDD,OAAQ,KACRC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAChC,CACDD,OAAQ,WACRC,OAAQ,CAAC,MAAO,QAAS,QAAS,URPpCU,OSrBa,CACbT,MAAO,CAAC,CACNF,OAAQ,WACRC,OAAQ,aACP,CACDD,OAAQ,8BACRC,OAAQ,SACP,CACDD,OAAQ,oCACRC,OAAQ,cACP,CACDD,OAAQ,QACRC,OAAQ,aACP,CACDD,OAAQ,gBACRC,OAAQ,gBACP,CACDD,OAAQ,wBACRC,OAAQ,YACP,CACDD,OAAQ,qBACRC,OAAQ,gBACP,CACDD,OAAQ,wBACRC,OAAQ,UACP,CACDD,OAAQ,oBACRC,OAAQ,cACP,CACDD,OAAQ,aACRC,OAAQ,QACP,CACDD,OAAQ,cACRC,OAAQ,SACP,CACDD,OAAQ,UACRC,OAAQ,UACP,CACDD,OAAQ,qBACRC,OAAQ,iBACP,CACDD,OAAQ,aACRC,OAAQ,YACP,CACDD,OAAQ,kBACRC,OAAQ,eACP,CACDD,OAAQ,kBACRC,OAAQ,kBACP,CACDD,OAAQ,YACRC,OAAQ,WACP,CACDD,OAAQ,OACRC,OAAQ,QACP,CACDD,OAAQ,QACRC,OAAQ,YACP,CACDD,OAAQ,kBACRC,OAAQ,aACP,CACDD,OAAQ,MACRC,OAAQ,QACP,CACDD,OAAQ,GACRC,OAAQ,IACP,CACDD,OAAQ,GACRC,OAAQ,IACP,CACDD,OAAQ,GACRC,OAAQ,eCjDZ,SAASW,IAGP,OAFcC,OAAOC,QAAQjB,GAAMkB,OAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAIE,OArBhE,SAAAC,GAA2C,IAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAM,EAAA,GAAjBG,EAAiBF,EAAA,GAAVlB,EAAUkB,EAAA,GAAVlB,MAC/B,MAAY,aAARoB,EACK,GAGFpB,EACJqB,OAAO,SAAAC,GAAA,IAAGxB,EAAHwB,EAAGxB,OAAQC,EAAXuB,EAAWvB,OAAX,OAAwBD,EAAOyB,OAAS,GAAKxB,EAAOwB,OAAS,IACpEC,IAAI,SAAAC,GAAA,IAAG3B,EAAH2B,EAAG3B,OAAQC,EAAX0B,EAAW1B,OAAX,MAAyB,CAC5B2B,OAAQC,MAAMC,QAAQ9B,GAAUA,EAAO,GAAKA,EAC5C+B,QAASF,MAAMC,QAAQ7B,GAAUA,EAAO,GAAKA,EAC7C+B,SAAU,KAWuDC,CAAgBhB,KAAS,IAG3FiB,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEP,OAAOS,cAAcD,EAAER,UACxCF,IAAI,SAACY,EAAMC,GAAP,OAAA1B,OAAA2B,EAAA,EAAA3B,CAAA,CACH4B,GAAIF,GACDD,KAIM,SAASI,IACtB,IAAMC,EAAQ/B,IACRgC,EAnBR,SAAoBD,GAClB,IAAMC,EAAUD,EAAM5B,OAAO,SAACC,EAAD6B,GAAA,IAAQd,EAARc,EAAQd,QAAR,OAAsBf,EAAIE,OAAOa,EAAQe,MAAM,MAAM,IAElF,OAAOC,eAAKH,GAASV,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,KAgBpCY,CAAWL,GAE3B,MAAO,CACLA,QACAC,WCtCJ,IAEeK,EAAA,CAEbC,QAFa,WAEH,IAAAC,EACmBT,IAE3B,MAAO,CACLU,SAJMD,EACAR,MAINC,QALMO,EACOP,UAQjBS,MAXa,SAAAlC,GAYX,MAAO,CACLmC,UAFanC,EAAToC,MAEaH,SAASI,QAAQtB,KAAK,kBAAMuB,KAAKC,SAf3C,KAgBPC,KAAM,GACNC,IAAK,GACLC,YAAY,IAIhBC,QApBa,SAAA1C,GAqBX,OADiBA,EAAT2C,MACKV,QAAQW,QAGvBA,KAxBa,SAAAxC,GAwBG,IAAT+B,EAAS/B,EAAT+B,MACL,MAAO,CACLU,YAAaV,EAAMD,UAAU,GAC7BA,UAAWC,EAAMD,UAAUE,MAAM,KAIrCU,OA/Ba,WAgCX,MAAO,CACLL,YAAY,IAIhBM,MArCa,SAAAxC,GAqCiB,IAAtB4B,EAAsB5B,EAAtB4B,MAAO1D,EAAe8B,EAAf9B,KAAMkE,EAASpC,EAAToC,MACXI,EAAoBtE,EAApBsE,MAAOnC,EAAanC,EAAbmC,SACPiC,EAAgBV,EAAhBU,YAERA,EAAYjC,SAAWyB,KAAKW,MAAMpC,EAAW,KAC7CiC,EAAYE,MAAQA,EAEhBF,EAAYlC,UAAYoC,EAE1BJ,EAAMM,UAENN,EAAMO,SAGHf,EAAMD,UAAU7B,QACnBsC,EAAMG,SAGRH,EAAMC,QAGRK,QA1Da,SAAAxB,GA0DM,IAATU,EAASV,EAATU,MACR,MAAO,CACLI,KAAM,CAACJ,EAAMU,aAAa/C,OAAOqC,EAAMI,MACvCM,YAAa,OAIjBK,OAjEa,SAAAC,GAiEK,IAAThB,EAASgB,EAAThB,MACP,MAAO,CACLK,IAAK,CAACL,EAAMU,aAAa/C,OAAOqC,EAAMK,KACtCK,YAAa,gDCrEnB,SAASO,EAATrD,GAA2B,IAARmB,EAAQnB,EAARmB,KACjB,OACEmC,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,iBACbF,EAAAtC,EAAAuC,cAAA,QAAMC,UAAU,UAAUrC,EAAKV,QAC/B6C,EAAAtC,EAAAuC,cAAA,QAAMC,UAAU,WAAWrC,EAAKP,SAC9BO,EAAK6B,MAAQM,EAAAtC,EAAAuC,cAAA,QAAMC,UAAU,SAASrC,EAAK6B,OAAgBM,EAAAtC,EAAAuC,cAAA,QAAMC,UAAU,SAAhB,cAKpD,SAASC,EAATxD,GAA4B,IAATuB,EAASvB,EAATuB,MAC1BkC,EAAQlC,EAAMlB,OAEpB,OACEgD,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,YACbF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,gBAAgBE,EAA/B,QACAJ,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,aACZhC,EAAMjB,IAAI,SAACY,GAAD,OAAUmC,EAAAtC,EAAAuC,cAACF,EAAD,CAASlD,IAAKgB,EAAKG,GAAIH,KAAMA,cCjB1D,SAASwC,EAAT3D,GAA4B,IAARmB,EAAQnB,EAARmB,KAClB,OACEmC,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,kBACbF,EAAAtC,EAAAuC,cAAA,QAAMC,UAAU,UAAUrC,EAAKV,QAC/B6C,EAAAtC,EAAAuC,cAAA,QAAMC,UAAU,WAAWrC,EAAKP,SAChC0C,EAAAtC,EAAAuC,cAAA,QAAMC,UAAU,YAAYrC,EAAKN,SAAjC,MAKS,SAAS+C,EAAT3D,GAA6B,IAATuB,EAASvB,EAATuB,MAC3BkC,EAAQlC,EAAMlB,OAEpB,OACEgD,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,aACbF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,gBAAgBE,EAA/B,SACAJ,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,aACZhC,EAAMjB,IAAI,SAACY,GAAD,OAAUmC,EAAAtC,EAAAuC,cAACI,EAAD,CAAUxD,IAAKgB,EAAKG,GAAIH,KAAMA,qECjB3D,SAAS0C,EAAT7D,GAAuC,IAArB8D,EAAqB9D,EAArB8D,OAAQC,EAAa/D,EAAb+D,UACxB,OACET,EAAAtC,EAAAuC,cAACS,EAAA,EAAD,CAAQC,QAAS,kBAAMF,EAAUD,KAAWA,GAIjC,SAASI,EAATjE,GAAmD,IAAtBwB,EAAsBxB,EAAtBwB,QAASsC,EAAa9D,EAAb8D,UACnD,OACET,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,YACbF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,oBAAf,wBACAF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,qBACZ/B,EAAQlB,IAAI,SAACuD,GAAD,OAAYR,EAAAtC,EAAAuC,cAACM,EAAD,CAAQ1D,IAAK2D,EAAQA,OAAQA,EAAQC,UAAWA,qBCXlE,SAASI,EAATnE,GAAgD,IAA1BoE,EAA0BpE,EAA1BoE,MAAOC,EAAmBrE,EAAnBqE,OAAQC,EAAWtE,EAAXsE,QAClD,OACEhB,EAAAtC,EAAAuC,cAACgB,EAAA,EAAD,CACEH,MAAOA,EACPI,YAAY,sBACZC,SAAUJ,EACVK,aAAcJ,EACdK,eAAe,MACfC,aAAa,MACbC,YAAY,MACZC,WAAW,QACXC,KAAK,qBCRUC,cACnB,SAAAA,EAAYC,GAAgB,IAAAC,EAAAC,EAAAzF,OAAA0F,EAAA,EAAA1F,CAAA2F,KAAAL,GAAA,QAAAM,EAAAC,UAAAjF,OAANkF,EAAM,IAAA9E,MAAA4E,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAND,EAAMC,EAAA,GAAAF,UAAAE,GAAA,OAC1BN,EAAAzF,OAAAgG,EAAA,EAAAhG,CAAA2F,MAAAH,EAAAxF,OAAAiG,EAAA,EAAAjG,CAAAsF,IAAAY,KAAAC,MAAAX,EAAA,CAAAG,KAAMJ,GAANlF,OAAgByF,MACXpD,MAAQ,CACXY,MAAO,GACPd,MAAO,IAAI4D,MAEbX,EAAKnC,MAAQmC,EAAKnC,MAAM+C,KAAXrG,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAAyF,KACbA,EAAKpB,UAAYoB,EAAKpB,UAAUgC,KAAfrG,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAAyF,KACjBA,EAAKc,YAAcd,EAAKc,YAAYF,KAAjBrG,OAAAsG,EAAA,EAAAtG,QAAAsG,EAAA,EAAAtG,CAAAyF,KAROA,yFAWFe,GACpBb,KAAKJ,MAAMnC,cAAgBoD,EAAUpD,aACvCuC,KAAKc,SAAS,CACZnD,MAAO,GACPd,OAAO,IAAI4D,MAAOM,gDAKZC,GACVhB,KAAKc,SAAS,CACZnD,MAAOqD,EAAGC,OAAOlC,wCAKnB,IAAMvD,GAAW,IAAIiF,MAAOM,UAAYf,KAAKjD,MAAMF,MAEnDmD,KAAKJ,MAAMjC,MAAM,CACfA,MAAOqC,KAAKjD,MAAMY,MAClBnC,+CAIMiD,GACRuB,KAAKc,SAAS,CACZnD,MAAOqC,KAAKjD,MAAMY,MAAQc,qCAK5B,OACER,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,cACbF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,gBAAf,qBACAF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,gBAAgB6B,KAAKJ,MAAMnC,YAAYrC,QACtD6C,EAAAtC,EAAAuC,cAACY,EAAD,CAAOC,MAAOiB,KAAKjD,MAAMY,MAAOqB,OAAQgB,KAAKY,YAAa3B,QAASe,KAAKrC,QACxEM,EAAAtC,EAAAuC,cAACW,EAAD,CAAUzC,QAAS4D,KAAKJ,MAAMxD,QAASsC,UAAWsB,KAAKtB,YACvDT,EAAAtC,EAAAuC,cAACS,EAAA,EAAD,CAAQe,KAAK,QAAQd,QAASoB,KAAKrC,MAAOuD,KAAK,WAA/C,iBAjD2BC,6BCDpB,SAASC,EAATzG,GAAoC,IAAhBoC,EAAgBpC,EAAhBoC,MAAOQ,EAAS5C,EAAT4C,MAChCT,EAAcC,EAAdD,UACAQ,EAAYC,EAAZD,QAER,OACEW,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,aACbF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,gBAAgBrB,EAAU7B,OAAzC,QAAsD6B,EAAU7B,OAAS,EAAI,IAAM,GAAnF,SACAgD,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,qBACbF,EAAAtC,EAAAuC,cAACS,EAAA,EAAD,CAAQC,QAAStB,EAAS4D,KAAK,UAA/B,WACAjD,EAAAtC,EAAAuC,cAACmD,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,YAChBtD,EAAAtC,EAAAuC,cAACS,EAAA,EAAD,CAAQC,QAAStB,GAAjB,yBCRJkE,EAAU,IAyBD,SAASC,EAAT9G,GAAgC,IAAhBoC,EAAgBpC,EAAhBoC,MAAOQ,EAAS5C,EAAT4C,MAC5BJ,EAAgDJ,EAAhDI,KAAMC,EAA0CL,EAA1CK,IAAKhB,EAAqCW,EAArCX,QAASiB,EAA4BN,EAA5BM,WAAYI,EAAgBV,EAAhBU,YAChCE,EAAUJ,EAAVI,MACF+D,EA1BR,SAAyBvE,EAAMC,GAC7B,IAAMuE,EAAYxE,EAAKlC,OACjB2G,EAAWxE,EAAInC,OAErB,IAAK2G,EACH,MAAO,CACLC,KAAM,KAIV,IAAKF,EACH,MAAO,CACLE,KAAM,QAIV,IAAMC,EAAQH,EAAYC,EAE1B,MAAO,CACLC,KAAI,GAAAnH,OAAKuC,KAAK8E,MAAOH,EAAWE,EAASN,GAArC,MAOQQ,CAAgB7E,EAAMC,GAEpC,OACEa,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,QACbF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,eAAeuD,MAAOA,IACrCzD,EAAAtC,EAAAuC,cAACE,EAAD,CAASjC,MAAOiB,IAChBa,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,iBACXd,GAAcY,EAAAtC,EAAAuC,cAAC+D,EAAD,CAAO7F,QAASA,EAASqB,YAAaA,EAAaE,MAAOA,IACzEN,GAAcY,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,IAAf,aACfF,EAAAtC,EAAAuC,cAACkD,EAAD,CAAM7D,MAAOA,EAAOR,MAAOA,KAE7BkB,EAAAtC,EAAAuC,cAACK,EAAD,CAAUpC,MAAOgB,iCCzCR,SAAS+E,EAATvH,GAA4B,IACjCiC,EADiCjC,EAAToC,MACxBH,SAER,OACEqB,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,YACbF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,mBACbF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,kBAAf,iBAA+CvB,EAAS3B,OAAxD,KACAgD,EAAAtC,EAAAuC,cAACiE,EAAA,EAAD,CAAMhE,UAAU,iBAAiBoD,GAAG,KAClCtD,EAAAtC,EAAAuC,cAACkE,EAAA,EAAD,CAAMlB,KAAK,mBAGfjD,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,iBACZvB,EAAS1B,IAAI,SAACY,EAAMC,GAAP,OACZkC,EAAAtC,EAAAuC,cAAA,OAAKpD,IAAKiB,EAAOoC,UAAU,gBACzBF,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,iBAAiBrC,EAAKV,QACrC6C,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,iBAAiBrC,EAAKP,qBCdjD,IAAM8G,EAAKC,SAASC,cAAc,SAEpBC,oBAAU/F,ECRT,CACbK,UAAW,GACXK,KAAM,GACNC,IAAK,GACLK,YAAa,KACbJ,YAAY,EACZjB,QAAS,ICAI,SAAAzB,GAA+B,IAAhBoC,EAAgBpC,EAAhBoC,MAAOQ,EAAS5C,EAAT4C,MACnC,OACEU,EAAAtC,EAAAuC,cAACuE,EAAA,EAAD,KAIExE,EAAAtC,EAAAuC,cAAA,OAAKC,UAAU,iBACbF,EAAAtC,EAAAuC,cAACwE,EAAA,EAAD,CAAOpB,OAAK,EAACqB,KAAK,IAAIC,OAAQ,kBAAM3E,EAAAtC,EAAAuC,cAACuD,EAAD,CAAM1E,MAAOA,EAAOQ,MAAOA,OAC/DU,EAAAtC,EAAAuC,cAACwE,EAAA,EAAD,CAAOpB,OAAK,EAACqB,KAAK,WAAWC,OAAQ,kBAAM3E,EAAAtC,EAAAuC,cAACgE,EAAD,CAASnF,MAAOA,EAAOQ,MAAOA,UFNpB8E,GAEvD3F,UAAUY","file":"static/js/main.c870b331.chunk.js","sourcesContent":["import adjectives from './adjectives';\r\nimport adverbs from './adverbs';\r\nimport nouns from './nouns';\r\nimport numerals from './numerals';\r\nimport particles from './particles';\r\nimport prepositions from './prepositions';\r\nimport pronouns from './pronouns';\r\nimport verbs from './verbs';\r\nimport recent from './recent';\r\n\r\n// https://niemiecki.ang.pl/gramatyka/czesci-mowy\r\n\r\nexport default {\r\n  nouns,\r\n  verbs,\r\n  adjectives,\r\n  numerals,\r\n  particles,\r\n  prepositions,\r\n  adverbs,\r\n  pronouns,\r\n  recent\r\n};\r\n","export default {\r\n  header: {\r\n    polish: 'Rzeczownik(i)',\r\n    german: 'Substantiv(e)'\r\n  },\r\n  items: [{\r\n    polish: 'mężczyzna',\r\n    german: ['der Mann', 'die Männer']\r\n  }, {\r\n    polish: 'kobieta',\r\n    german: ['die Frau', 'die Frauen']\r\n  }, {\r\n    polish: 'dziecko',\r\n    german: ['das Kind', 'die Kinder']\r\n\r\n  }]\r\n};\r\n","export default {\r\n  header: {\r\n    polish: 'Czasownik(i)',\r\n    german: 'Verb(en)'\r\n  },\r\n  items: [{\r\n    polish: 'być',\r\n    german: 'sein'\r\n  }, {\r\n    polish: 'mieć',\r\n    german: 'haben'\r\n  }, {\r\n    polish: 'uczyć się',\r\n    german: 'lernen'\r\n  }, {\r\n    polish: 'robić',\r\n    german: 'machen'\r\n  }, {\r\n    polish: 'dawać',\r\n    german: 'geben'\r\n  }, {\r\n    polish: 'brać',\r\n    german: 'nehmen'\r\n  }, {\r\n    polish: 'pomagać',\r\n    german: 'helfen'\r\n  }]\r\n};\r\n","export default {\r\n  header: {\r\n    polish: 'Przymiotnik(i)',\r\n    german: 'Adjektiv(e)'\r\n  },\r\n  items: []\r\n};\r\n","export default {\r\n  header: {\r\n    polish: 'Liczebniki(i)',\r\n    german: 'Ziffer/Zahlen'\r\n  },\r\n  items: [{\r\n    label: '0',\r\n    polish: 'zero',\r\n    german: 'null'\r\n  }, {\r\n    label: '1',\r\n    polish: 'jeden',\r\n    german: 'ein'\r\n  }, {\r\n    label: '2',\r\n    polish: 'dwa',\r\n    german: 'zwei'\r\n  }, {\r\n    label: '3',\r\n    polish: 'trzy',\r\n    german: 'drei'\r\n  }, {\r\n    label: '4',\r\n    polish: 'cztery',\r\n    german: 'vier'\r\n  }, {\r\n    label: '5',\r\n    polish: 'pięć',\r\n    german: 'fünf'\r\n  }, {\r\n    label: '6',\r\n    polish: 'sześć',\r\n    german: 'sechs'\r\n  }, {\r\n    label: '7',\r\n    polish: 'siedem',\r\n    german: 'sieben'\r\n  }, {\r\n    label: '8',\r\n    polish: 'osiem',\r\n    german: 'acht'\r\n  }, {\r\n    label: '9',\r\n    polish: 'dziewięć',\r\n    german: 'nein'\r\n  }, {\r\n    label: '10',\r\n    polish: 'dziesięć',\r\n    german: 'zehn'\r\n  }, {\r\n    label: '11',\r\n    polish: 'jedenaście',\r\n    german: 'elf'\r\n  }, {\r\n    label: '12',\r\n    polish: 'dwanaście',\r\n    german: 'zwölf'\r\n  }, {\r\n    label: '13',\r\n    polish: 'trzynaście',\r\n    german: 'dreizehn'\r\n  }, {\r\n    label: '14',\r\n    polish: 'czternaście',\r\n    german: 'vierzehn'\r\n  }, {\r\n    label: '15',\r\n    polish: 'piętnaście',\r\n    german: 'fünfzehn'\r\n  }, {\r\n    label: '16',\r\n    polish: 'szesnaście',\r\n    german: 'sechzehn'\r\n  }, {\r\n    label: '17',\r\n    polish: 'siedemnaście',\r\n    german: 'siebzehn'\r\n  }, {\r\n    label: '18',\r\n    polish: 'osiemnaście',\r\n    german: 'achtzehn'\r\n  }, {\r\n    label: '19',\r\n    polish: 'dziewiętnaście',\r\n    german: 'neunzehn'\r\n  }, {\r\n    label: '20',\r\n    polish: 'dwadzieścia',\r\n    german: 'zwanzig'\r\n  }, {\r\n    label: '21',\r\n    polish: 'dwadzieścia jeden',\r\n    german: 'einundzwanzig'\r\n  }, {\r\n    label: '22',\r\n    polish: 'dwadzieścia dwa',\r\n    german: 'zweiundzwanzig'\r\n  }, {\r\n    label: '30',\r\n    polish: 'trzydzieści',\r\n    german: 'dreißig'\r\n  }, {\r\n    label: '40',\r\n    polish: 'czterdzieści',\r\n    german: 'vierzig'\r\n  }, {\r\n    label: '50',\r\n    polish: 'pięćdziesiąt',\r\n    german: 'fünfzig'\r\n  }, {\r\n    label: '60',\r\n    polish: 'sześćdziesiąt',\r\n    german: 'sechzig'\r\n  }, {\r\n    label: '70',\r\n    polish: 'siedemdziesiąt',\r\n    german: 'siebzig'\r\n  }, {\r\n    label: '80',\r\n    polish: 'osiemdziesiąt',\r\n    german: 'achtzig'\r\n  }, {\r\n    label: '90',\r\n    polish: 'dziewięćdziesiąt',\r\n    german: 'neunzig'\r\n  }, {\r\n    label: '100',\r\n    polish: 'sto',\r\n    german: 'hundert'\r\n  }, {\r\n    label: '101',\r\n    polish: 'sto jeden',\r\n    german: 'einhundertundeins'\r\n  }, {\r\n    label: '111',\r\n    polish: 'sto jedenaście',\r\n    german: 'einhundertundelf'\r\n  }, {\r\n    label: '1.000',\r\n    polish: 'tysiąc',\r\n    german: 'tausend'\r\n  }, {\r\n    label: '1.001',\r\n    polish: 'tysiąc jeden',\r\n    german: 'eintausend eins'\r\n  }, {\r\n    label: '1.011',\r\n    polish: 'tysiąc jedenaście',\r\n    german: 'eintausend elf'\r\n  }, {\r\n    label: '1.111',\r\n    polish: 'tysiąc sto jedenaście',\r\n    german: '?'\r\n  }, {\r\n    label: '10.000',\r\n    polish: 'dziesięć tysięcy',\r\n    german: 'zehntausend'\r\n  }, {\r\n    label: '100.000',\r\n    polish: 'sto tysięcy',\r\n    german: 'einhunderttausend'\r\n  }, {\r\n    label: '1.000.000',\r\n    polish: 'milion',\r\n    german: 'million'\r\n  }]\r\n};\r\n","export default {\r\n  header: {\r\n    polish: 'Partykuł(y)',\r\n    german: 'Partikel'\r\n  },\r\n  items: [{\r\n    polish: 'mało',\r\n    german: 'wenig'\r\n  }, {\r\n    polish: 'dużo',\r\n    german: 'viel'\r\n  }, {\r\n    polish: 'bardzo',\r\n    german: 'sehr'\r\n  }, {\r\n    polish: 'całkiem, zupełnie',\r\n    german: 'ganz'\r\n  }, {\r\n    polish: 'nawet',\r\n    german: 'sogar'\r\n  }, {\r\n    polish: 'w ogóle',\r\n    german: 'überhaupt'\r\n  }, {\r\n    polish: 'jeszcze',\r\n    german: 'noch'\r\n  }, {\r\n    polish: 'tak',\r\n    german: 'so'\r\n  }, {\r\n    polish: 'coraz',\r\n    german: 'immer'\r\n  }, {\r\n    polish: 'zbyt',\r\n    german: 'zu'\r\n  }]\r\n};\r\n","export default {\r\n  header: {\r\n    polish: 'Przyim(ek/ki)',\r\n    german: 'Präposition(en)'\r\n  },\r\n  items: [{\r\n    polish: 'z, ze środka',\r\n    german: 'aus'\r\n  }, {\r\n    polish: 'u, przy, koło',\r\n    german: 'bei'\r\n  }, {\r\n    polish: 'naprzeciwko',\r\n    german: 'gegenüber'\r\n  }, {\r\n    polish: 'z czymś, z kimś',\r\n    german: 'mit'\r\n  }, {\r\n    polish: 'po, do, według',\r\n    german: 'nach'\r\n  }, {\r\n    polish: 'od (czas)',\r\n    german: 'seit'\r\n  }, {\r\n    polish: 'od, z, o',\r\n    german: 'von'\r\n  }, {\r\n    polish: 'do (osoby, budowli)',\r\n    german: 'zu'\r\n  }]\r\n};\r\n","export default {\r\n  header: {\r\n    polish: 'Przysłów(ek/ki)',\r\n    german: 'Adverb(ien)'\r\n  },\r\n  items: [{\r\n    polish: 'szybko',\r\n    german: 'schnell'\r\n  }, {\r\n    polish: 'ładnie',\r\n    german: 'schön'\r\n  }, {\r\n    polish: 'poprawnie',\r\n    german: 'richtig'\r\n  }, {\r\n    polish: 'długo',\r\n    german: 'lange'\r\n  }, {\r\n    polish: 'dobrze',\r\n    german: 'gut'\r\n  }, {\r\n    polish: 'tam',\r\n    german: 'dort,dorthin'\r\n  }, {\r\n    polish: 'tutaj',\r\n    german: 'hier, playhierher'\r\n  }, {\r\n    polish: 'wszędzie',\r\n    german: 'überall'\r\n  }, {\r\n    polish: 'czasami',\r\n    german: 'manchmal'\r\n  }, {\r\n    polish: 'wkrótce',\r\n    german: 'bald'\r\n  }, {\r\n    polish: 'niedawno',\r\n    german: 'von kurzem'\r\n  }]\r\n};\r\n","export default {\r\n  header: {\r\n    polish: 'Zaim(ek/ki)',\r\n    german: 'Pronomen'\r\n  },\r\n  items: [{\r\n    polish: 'ja',\r\n    german: ['ich', 'meiner', 'mir', 'mich']\r\n  }, {\r\n    polish: 'ty',\r\n    german: ['du', 'deiner', 'dir', 'dich']\r\n  }, {\r\n    polish: 'on',\r\n    german: ['er', 'seiner', 'ihm', 'ihn']\r\n  }, {\r\n    polish: 'ona',\r\n    german: ['sie', 'ihrer', 'ihr', 'sie']\r\n  }, {\r\n    polish: 'ono',\r\n    german: ['es', 'seiner', 'ihm', 'es']\r\n  }, {\r\n    polish: 'my',\r\n    german: ['wir', 'unser', 'uns', 'uns']\r\n  }, {\r\n    polish: 'wy',\r\n    german: ['ihr', 'eurer', 'euch', 'euch']\r\n  }, {\r\n    polish: 'oni, one',\r\n    german: ['sie', 'ihrer', 'ihnen', 'sie']\r\n  }]\r\n};\r\n","export default {\r\n  items: [{\r\n    polish: 'zawód',\r\n    german: 'der Beruf'\r\n  }, {\r\n    polish: 'cześć (powitanie)',\r\n    german: 'hallo'\r\n  }, {\r\n    polish: 'cześć (pożegnanie)',\r\n    german: 'tschüss'\r\n  }, {\r\n    polish: 'hotel',\r\n    german: 'das Hotel'\r\n  }, {\r\n    polish: 'poznawać',\r\n    german: 'kennenlernen'\r\n  }, {\r\n    polish: 'podobać się',\r\n    german: 'gefallen'\r\n  }, {\r\n    polish: 'sprzątać',\r\n    german: 'aufräumen'\r\n  }, {\r\n    polish: 'porządkować',\r\n    german: 'potzen'\r\n  }, {\r\n    polish: 'należeć',\r\n    german: 'gehören'\r\n  }, {\r\n    polish: 'słowo',\r\n    german: 'Wort'\r\n  }, {\r\n    polish: 'czytać',\r\n    german: 'lesen'\r\n  }, {\r\n    polish: 'okulary',\r\n    german: 'Brille'\r\n  }, {\r\n    polish: 'przeliterować',\r\n    german: 'Buchstabieren'\r\n  }, {\r\n    polish: 'głowa',\r\n    german: 'der Kopf'\r\n  }, {\r\n    polish: 'fascynować',\r\n    german: 'faszinieren'\r\n  }, {\r\n    polish: 'basen (budynek)',\r\n    german: 'das Schwimmbad'\r\n  }, {\r\n    polish: 'zagranica',\r\n    german: 'Ausland'\r\n  }, {\r\n    polish: 'nuty',\r\n    german: 'Note'\r\n  }, {\r\n    polish: 'na co',\r\n    german: 'wofür'\r\n  }, {\r\n    polish: 'pozwiązany',\r\n    german: 'verbunden'\r\n  }, {\r\n    polish: 'ale',\r\n    german: 'aber'\r\n  }, {\r\n    polish: '',\r\n    german: ''\r\n  }, {\r\n    polish: '',\r\n    german: ''\r\n  }, {\r\n    polish: '',\r\n    german: ''\r\n  }]\r\n};\r\n","import data from './index';\r\nimport { uniq } from 'lodash';\r\n\r\nfunction parseGroupWords([key, { items }]) {\r\n  if (key === 'numerals') {\r\n    return [];\r\n  }\r\n\r\n  return items\r\n    .filter(({ polish, german }) => polish.length > 1 && german.length > 1)\r\n    .map(({ polish, german }) => ({\r\n      origin: Array.isArray(polish) ? polish[0] : polish,\r\n      outcome: Array.isArray(german) ? german[0] : german,\r\n      duration: 0\r\n    }));\r\n}\r\n\r\nfunction getLetters(words) {\r\n  const letters = words.reduce((arr, { outcome }) => arr.concat(outcome.split('')), []);\r\n\r\n  return uniq(letters).sort((a, b) => a.localeCompare(b));\r\n}\r\n\r\nfunction getWords() {\r\n  const words = Object.entries(data).reduce((arr, entry) => arr.concat(parseGroupWords(entry)), []);\r\n\r\n  return words\r\n    .sort((a, b) => a.origin.localeCompare(b.origin))\r\n    .map((word, index) => ({\r\n      id: index,\r\n      ...word\r\n    }));\r\n}\r\n\r\nexport default function getData() {\r\n  const words = getWords();\r\n  const letters = getLetters(words);\r\n\r\n  return {\r\n    words,\r\n    letters\r\n  };\r\n}\r\n","import getData from './data/getData';\r\n\r\nconst HALF = 0.5;\r\n\r\nexport default {\r\n\r\n  setData() {\r\n    const { words, letters } = getData();\r\n\r\n    return {\r\n      allWords: words,\r\n      letters\r\n    };\r\n  },\r\n\r\n  start({ state }) {\r\n    return {\r\n      available: state.allWords.slice().sort(() => Math.random() - HALF),\r\n      good: [],\r\n      bad: [],\r\n      isFinished: false\r\n    };\r\n  },\r\n\r\n  restart({ store }) {\r\n    return store.start().pick();\r\n  },\r\n\r\n  pick({ state }) {\r\n    return {\r\n      currentWord: state.available[0],\r\n      available: state.available.slice(1)\r\n    };\r\n  },\r\n\r\n  finish() {\r\n    return {\r\n      isFinished: true\r\n    };\r\n  },\r\n\r\n  guess({ state, data, store }) {\r\n    const { guess, duration } = data;\r\n    const { currentWord } = state;\r\n\r\n    currentWord.duration = Math.round(duration / 1000);\r\n    currentWord.guess = guess;\r\n\r\n    if (currentWord.outcome === guess) {\r\n    // if (Math.random() > HALF) {\r\n      store.setGood();\r\n    } else {\r\n      store.setBad();\r\n    }\r\n\r\n    if (!state.available.length) {\r\n      store.finish();\r\n    }\r\n\r\n    store.pick();\r\n  },\r\n\r\n  setGood({ state }) {\r\n    return {\r\n      good: [state.currentWord].concat(state.good),\r\n      currentWord: null\r\n    };\r\n  },\r\n\r\n  setBad({ state }) {\r\n    return {\r\n      bad: [state.currentWord].concat(state.bad),\r\n      currentWord: null\r\n    };\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\nfunction BadItem({ word }) {\r\n  return (\r\n    <div className=\"bad-list-item\">\r\n      <span className=\"origin\">{word.origin}</span>\r\n      <span className=\"outcome\">{word.outcome}</span>\r\n      { word.guess ? <span className=\"wrong\">{word.guess}</span> : <span className=\"empty\">no answer</span> }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function BadList({ words }) {\r\n  const count = words.length;\r\n\r\n  return (\r\n    <div className=\"bad-list\">\r\n      <div className=\"game__header\">{count} bad</div>\r\n      <div className=\"word-list\">\r\n        {words.map((word) => <BadItem key={word.id} word={word} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './styles.scss';\r\n\r\nfunction GoodItem({ word }) {\r\n  return (\r\n    <div className=\"good-list-item\">\r\n      <span className=\"origin\">{word.origin}</span>\r\n      <span className=\"outcome\">{word.outcome}</span>\r\n      <span className=\"duration\">{word.duration}s</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function GoodList({ words }) {\r\n  const count = words.length;\r\n\r\n  return (\r\n    <div className=\"good-list\">\r\n      <div className=\"game__header\">{count} good</div>\r\n      <div className=\"word-list\">\r\n        {words.map((word) => <GoodItem key={word.id} word={word} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'antd';\r\n\r\nfunction Letter({ letter, useLetter }) {\r\n  return (\r\n    <Button onClick={() => useLetter(letter)} >{letter}</Button>\r\n  );\r\n}\r\n\r\nexport default function GameGuessKeyboard({ letters, useLetter }) {\r\n  return (\r\n    <div className=\"keyboard\">\r\n      <div className=\"keyboard__header\">Possible characters:</div>\r\n      <div className=\"keyboard__letters\">\r\n        {letters.map((letter) => <Letter key={letter} letter={letter} useLetter={useLetter} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Input } from 'antd';\r\n\r\nexport default function GuessInput({ value, update, approve }) {\r\n  return (\r\n    <Input\r\n      value={value}\r\n      placeholder=\"Place Your guess...\"\r\n      onChange={update}\r\n      onPressEnter={approve}\r\n      autoCapitalize=\"off\"\r\n      autoComplete=\"off\"\r\n      autoCorrect=\"off\"\r\n      spellCheck=\"false\"\r\n      size=\"large\"\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'antd';\r\nimport Keyboard from './keyboard';\r\nimport Input from './input';\r\nimport './styles.scss';\r\n\r\nexport default class Guess extends Component {\r\n  constructor(props, ...args) {\r\n    super(props, ...args);\r\n    this.state = {\r\n      guess: '',\r\n      start: new Date()\r\n    };\r\n    this.guess = this.guess.bind(this);\r\n    this.useLetter = this.useLetter.bind(this);\r\n    this.updateGuess = this.updateGuess.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.currentWord !== nextProps.currentWord) {\r\n      this.setState({\r\n        guess: '',\r\n        start: new Date().getTime()\r\n      });\r\n    }\r\n  }\r\n\r\n  updateGuess(ev) {\r\n    this.setState({\r\n      guess: ev.target.value\r\n    });\r\n  }\r\n\r\n  guess() {\r\n    const duration = new Date().getTime() - this.state.start;\r\n\r\n    this.props.guess({\r\n      guess: this.state.guess,\r\n      duration\r\n    });\r\n  }\r\n\r\n  useLetter(letter) {\r\n    this.setState({\r\n      guess: this.state.guess + letter\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game-guess\">\r\n        <div className=\"game__header\">Word to translate</div>\r\n        <div className=\"current-word\">{this.props.currentWord.origin}</div>\r\n        <Input value={this.state.guess} update={this.updateGuess} approve={this.guess} />\r\n        <Keyboard letters={this.props.letters} useLetter={this.useLetter} />\r\n        <Button size=\"large\" onClick={this.guess} type=\"primary\">Check</Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\nimport './styles.scss';\r\n\r\nexport default function GameMenu({ state, store }) {\r\n  const { available } = state;\r\n  const { restart } = store;\r\n\r\n  return (\r\n    <div className=\"game-menu\">\r\n      <div className=\"game__header\">{available.length} word{available.length > 1 ? 's' : ''} left</div>\r\n      <div className=\"game-menu-options\">\r\n        <Button onClick={restart} type=\"danger\">Restart</Button>\r\n        <NavLink exact to=\"/library\">\r\n          <Button onClick={restart}>Library</Button>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport BadList from './badList';\r\nimport GoodList from './goodList';\r\nimport Guess from './guess';\r\nimport Menu from './menu';\r\nimport './styles.scss';\r\n\r\nconst PERCENT = 100;\r\n\r\nfunction calculateStatus(good, bad) {\r\n  const goodCount = good.length;\r\n  const badCount = bad.length;\r\n\r\n  if (!badCount) {\r\n    return {\r\n      left: '0'\r\n    };\r\n  }\r\n\r\n  if (!goodCount) {\r\n    return {\r\n      left: '100%'\r\n    };\r\n  }\r\n\r\n  const total = goodCount + badCount;\r\n\r\n  return {\r\n    left: `${Math.floor((badCount / total) * PERCENT)}%`\r\n  };\r\n}\r\n\r\nexport default function Game({ state, store }) {\r\n  const { good, bad, letters, isFinished, currentWord } = state;\r\n  const { guess } = store;\r\n  const style = calculateStatus(good, bad);\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game__status\" style={style} />\r\n      <BadList words={bad} />\r\n      <div className=\"game-content\">\r\n        {!isFinished && <Guess letters={letters} currentWord={currentWord} guess={guess} />}\r\n        {isFinished && <div className=\"\">Finished!</div>}\r\n        <Menu store={store} state={state} />\r\n      </div>\r\n      <GoodList words={good} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon } from 'antd';\r\nimport './styles.scss';\r\n\r\nexport default function Library({ state }) {\r\n  const { allWords } = state;\r\n\r\n  return (\r\n    <div className=\"app-page\">\r\n      <div className=\"library__header\">\r\n        <div className=\"library__label\">Words library({allWords.length})</div>\r\n        <Link className=\"library__close\" to=\"/\">\r\n          <Icon type=\"close-circle\" />\r\n        </Link>\r\n      </div>\r\n      <div className=\"library__list\">\r\n        {allWords.map((word, index) =>\r\n          <div key={index} className=\"library__row\">\r\n            <div className=\"library__cell\">{word.origin}</div>\r\n            <div className=\"library__cell\">{word.outcome}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import 'antd/dist/antd.css';\r\nimport { createApp } from 'pipe-and-gauge';\r\nimport actions from './actions';\r\nimport initialState from './initialState';\r\nimport ReactAppView from './app';\r\n\r\nconst el = document.querySelector('#root');\r\n\r\nconst store = createApp(actions, initialState, ReactAppView, el);\r\n\r\nstore.setData().restart();\r\n","export default {\r\n  available: [],\r\n  good: [],\r\n  bad: [],\r\n  currentWord: null,\r\n  isFinished: false,\r\n  letters: []\r\n};\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Game from './game';\r\nimport Library from './library';\r\nimport './styles.scss';\r\n\r\nexport default function App({ state, store }) {\r\n  return (\r\n    <Router\r\n\r\n      // basename=\"/flashcards-app\" // This should be commented for development until fixed.\r\n    >\r\n      <div className=\"app-container\">\r\n        <Route exact path=\"/\" render={() => <Game state={state} store={store} /> } />\r\n        <Route exact path=\"/library\" render={() => <Library state={state} store={store} /> } />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n"],"sourceRoot":""}